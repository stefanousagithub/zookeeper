<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
  /**
   * Licensed to the Apache Software Foundation (ASF) under one
   * or more contributor license agreements.  See the NOTICE file
   * distributed with this work for additional information
   * regarding copyright ownership.  The ASF licenses this file
   * to you under the Apache License, Version 2.0 (the
   * "License"); you may not use this file except in compliance
   * with the License.  You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  -->
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.zookeeper</groupId>
    <artifactId>parent</artifactId>
    <version>3.10.0-SNAPSHOT</version>
  </parent>

  <artifactId>zookeeper</artifactId>
  <packaging>jar</packaging>
  <name>Apache ZooKeeper - Server</name>
  <description>ZooKeeper server</description>

  <properties>
    <ba-dua.groupId>br.usp.each.saeg</ba-dua.groupId>
    <ba-dua-agent-rt.version>0.6.0</ba-dua-agent-rt.version>
    <ba-dua.version>0.6.0</ba-dua.version>
  </properties>

  <dependencies>
	  <!-- Stefano Costanzo Pit dependency -->
    <dependency>
		<groupId>org.pitest</groupId>
		<artifactId>pitest-maven</artifactId>
		<version>1.5.1</version>
		<type>maven-plugin</type>
    </dependency>  
	  
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper-jute</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.yetus</groupId>
      <artifactId>audience-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport-native-epoll</artifactId>
      <classifier>linux-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk18on</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
       <groupId>io.dropwizard.metrics</groupId>
       <artifactId>metrics-core</artifactId>
       <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kerby</groupId>
      <artifactId>kerb-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kerby</groupId>
      <artifactId>kerb-simplekdc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kerby</groupId>
      <artifactId>kerby-config</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <scope>test</scope>
    </dependency>-->
    <dependency>
      <groupId>org.burningwave</groupId>
      <artifactId>tools</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
       <!-- isw jacoco Stefano Costanzo -->
      <!--
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
            <execution>
                <id>report</id>
                <goals>
                    <goal>report</goal>
                </goals>
                <phase>verify</phase>
            </execution>
        </executions>
      </plugin>
      -->
       <!-- isw badua Stefano Costanzo -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <!-- <version>3.1.0</version> -->
        <version>2.4</version>
        <executions>
          <execution>
            <id>install-ba-dua-agent-rt</id>
            <phase>initialize</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <groupId>${ba-dua.groupId}</groupId>
              <artifactId>ba-dua-agent-rt</artifactId>
              <version>${ba-dua-agent-rt.version}</version>
              <classifier>all</classifier>
              <packaging>jar</packaging>
              <file>${project.basedir}/../ba-dua/ba-dua-agent-rt-${ba-dua-agent-rt.version}-all.jar</file>
            </configuration>
          </execution>
          <execution>
            <id>install-ba-dua-cli</id>
            <phase>initialize</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <groupId>${ba-dua.groupId}</groupId>
              <artifactId>ba-dua-cli</artifactId>
              <version>${ba-dua.version}</version>
              <classifier>all</classifier>
              <packaging>jar</packaging>
              <file>${project.basedir}/../ba-dua/ba-dua-cli-${ba-dua.version}-all.jar</file>
            </configuration>
          </execution>
        </executions>
      </plugin>

    
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <!-- ${maven.build.timestamp} does not support timezone :( -->
            <id>build-time</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <configuration>
              <name>build.time</name>
              <pattern>yyyy-MM-dd HH:mm zz</pattern>
              <locale>en_US</locale>
              <timeZone>UTC</timeZone>
            </configuration>
          </execution>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-filtered-java-source</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-sources/java</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/java-filtered</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <excludeTransitive>false</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <executions>
          <execution>
            <id>build bundle</id>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <instructions>
            <Import-Package>
              io.netty.buffer;resolution:=optional,
              io.netty.channel;resolution:=optional,
              io.netty.channel.group;resolution:=optional,
              io.netty.channel.socket.nio;resolution:=optional,
              javax.management;resolution:=optional,
              javax.security.auth.callback,
              javax.security.auth.login,
              javax.security.sasl,
              org.ietf.jgss,
              org.osgi.framework;resolution:=optional,
              org.osgi.util.tracker;resolution:=optional,
              org.slf4j,
              *;resolution:=optional
            </Import-Package>
            <Export-Package>
              !org.apache.zookeeper.data,
              !org.apache.zookeeper.proto,
              !org.apache.zookeeper.txn,
              org.apache.zookeeper*
            </Export-Package>
            <Bundle-Name>ZooKeeper Bundle</Bundle-Name>
            <Bundle-DocURL>https://zookeeper.apache.org/doc/current/</Bundle-DocURL>
            <Implementation-Build>${mvngit.commit.id}</Implementation-Build>
            <Merge-Headers>!Implementation-Build,*</Merge-Headers>
          </instructions>
          <classifier>osgi</classifier>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>publish-test-jar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
     </plugins>
  </build>
  
  <profiles>
        <!-- ba-dua profile -->
    <profile>
      <id>badua</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <argLine>-javaagent:target/dependency/ba-dua-agent-rt-${ba-dua-agent-rt.version}-all.jar -Doutput.file=target/badua.ser</argLine>
      </properties>

      <build>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <!--<version>2.10</version> -->
            <version>2.8</version>
            <executions>
              <execution>
                <id>copy-ba-dua-agent-rt</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>${ba-dua.groupId}</groupId>
                      <artifactId>ba-dua-agent-rt</artifactId>
                      <classifier>all</classifier>
                      <version>${ba-dua-agent-rt.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
              <execution>
                <id>copy-ba-dua-cli</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>${ba-dua.groupId}</groupId>
                      <artifactId>ba-dua-cli</artifactId>
                      <classifier>all</classifier>
                      <version>${ba-dua.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- serve per l'output di ba-dua in xml -->
          <!--<plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.5.0</version>
            <version>3.0.0</version>
            <dependencies>
              <dependency>
                <groupId>${ba-dua.groupId}</groupId>
                <artifactId>ba-dua-cli</artifactId>
                <version>${ba-dua.version}</version>
                <type>jar</type>
                <scope>system</scope>
                <systemPath>${project.basedir}/../ba-dua/ba-dua-cli-${ba-dua.version}-all.jar</systemPath>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <includePluginDependencies>true</includePluginDependencies>
                  <executableDependency>
                    <groupId>${ba-dua.groupId}</groupId>
                    <artifactId>ba-dua-cli</artifactId>
                  </executableDependency>
                  <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>
                  <arguments>
                    <argument>-input</argument>
                    <argument>${project.build.directory}/badua.ser</argument>
                    <argument>-classes</argument>
                    <argument>${project.build.outputDirectory}</argument>
                    <argument>-show-classes</argument>
                    <argument>-show-methods</argument>
                    <argument>-xml</argument>
                    <argument>${project.build.directory}/badua.xml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>-->

        </plugins>
      </build>
    </profile>

    <!-- Mutation PIT profile -->
    <profile>
      <id>mutation</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <withHistory>true</withHistory>
        <pitest.version>1.8.0</pitest.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest.version}</version>
            <configuration>
              <timeoutConstant>6000</timeoutConstant>
              <targetClasses>
                <param>org.apache.zookeeper.common.PathUtils</param>
                <param>org.apache.zookeeper.server.DataTree</param>
                <param>org.apache.zookeeper.ZKUtil</param>
              </targetClasses>
              <targetTests>
                <param>org.apache.zookeeper.common.pathUtilsTest.ValidatePathTest</param>
                <param>org.apache.zookeeper.server.dataTreeTest.CreateNodeTest</param>
                <param>org.apache.zookeeper.server.dataTreeTest.DeleteNodeTest</param>
                <param>org.apache.zookeeper.zkUtilTest.ListSubTreeBFSTest</param>
              </targetTests>

              <avoidCallsTo>
                <avoidCallsTo>org.slf4j</avoidCallsTo>
              </avoidCallsTo>
            </configuration>
            <executions>
              <execution>
                <id>Mutation report</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
